name: 'CI and Release'

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  config:
    uses: ./.github/workflows/config.yml

  setup:
    needs: config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          python-version: ${{ needs.config.outputs.python-version }}

  format:
    needs: [ config, setup ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          python-version: ${{ needs.config.outputs.python-version }}
      - uses: ./.github/actions/code-quality
        with:
          check-type: 'format'
          source-dir: ${{ needs.config.outputs.source-dir }}

  lint:
    needs: [ config, format ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          python-version: ${{ needs.config.outputs.python-version }}
      - uses: ./.github/actions/code-quality
        with:
          check-type: 'lint'
          source-dir: ${{ needs.config.outputs.source-dir }}

  type-check:
    needs: [ config, format ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          python-version: ${{ needs.config.outputs.python-version }}
      - uses: ./.github/actions/code-quality
        with:
          check-type: 'type-check'
          source-dir: ${{ needs.config.outputs.source-dir }}

  test:
    needs: [ config, setup ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          python-version: ${{ needs.config.outputs.python-version }}
      - name: Run Tests
        run: poetry run pytest